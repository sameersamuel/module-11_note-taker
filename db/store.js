//  node:util module supports the needs of Node.js internal APIs
const util = require('util');
const fs = require('fs');

// UUID v1 is generated by using a combination the host computers MAC address and the current date and time
const uuidv1 = require('uuid/v1'); 

// promisfy() converts callback-based functions to promise-based functions
const readFileAsync = util.promisify(fs.readFile);
const writeFileAsync = util.promisify(fs.writeFile);

class StoreNote {
    read(){
        return readFileAsync('db/db.json', 'utf8');
    }

    write(note){
        return writeFileAsync('db/db.json', JSON.stringify(note))
    }

    getNote() {
        return this.read().then((note)=>{
            let parsedNote;
            try {
                parsedNote = [].concat(JSON.parse(note))
            } catch(err){
                parsedNote = []
            }
            return parsedNote;
        })
    }

    addNote(){
        const { title, text } = note;
        if(!title || !text){
            throw new Error("Please add title or text.")
        }
        const newNote = { title, text, id: uuidv1()};
        return this.getNote().then((note) => [...note, newNote])
        .then((updatedNote) => this.write(updatedNote))
        .then(() => newNote)
    }
   
    removeNote(id){
        return this.getNote().then((note) => note.filter((note) => note.id !==id))
        .then((filteredNote) => this.write(filteredNote));
    }
}

module.exports = new StoreNote();